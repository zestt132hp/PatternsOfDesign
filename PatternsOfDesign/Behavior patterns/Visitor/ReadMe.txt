Visitor(Посетитель)

Посетитель - это поведенческий паттерн проектирования, который позвволяет ввести новый функционал не меняя классы объектов, над которыми операции будут происходить.

Паттерн "посетитель" предлагает разместить новый функционал в новом классе, вместо того, чтобы множить его сразу в несколькоих классах.
Объекты, поведение которых, должно бы быть связано поведенеие, не будут его выполнять самоостоятельно.
Вместо этого, вы будете
передавать эти объекты в методы посетителя.
Код поведения скорей всего должен отличаться для объектов разных
классов, поэтому и методов у посетителя должно быть несколько.
Названия и принцип действия этих методов будет схож, но основное
отличие будет в типе принимаемого в параметрах объекта.
Здесь возникает вопрос, каким образом мы будет подавать узлы в
объект посетитель. Так как все методы имеют отличающуюся
сигнатуру, использовать полиморфизм при переборе узлов не
получится. Придётся проверять тип узлов для того, чтобы выбрать
соответствующий метод посетителя.Тут не поможет даже механизм перегрузки методов.
Если назвать все методы одинаково, то неопределённость
реального типа узла всё равно не даст вызвать правильный метод.
Механизм перегрузки всё время будет вызывать метод посетителя,
соответствующий типу Node , а не реального класса поданного узла.
Но паттерн Посетитель решает и эту проблему, используя механизм
двойной диспетчеризации. Вместо того чтобы самим искать нужный
метод, мы можем поручить это объектам, которые передаём в
параметрах посетителю. А они уже вызовут правильный метод
посетителя.
изменить классы узлов всё-таки придётся. Но это простое
изменение в любое время позволит применять к объектам узлов и
другие поведения. Ведь классы узлов будут привязаны не к
конкретному классу посетителей, а к их общему интерфейсу. Поэтому
если придётся добавить в программу новое поведение, вы создадите
новый класс посетителей, реализующий общий интерфейс, и будете
передавать его в методы узлов.

Аналогия из жизни

Представьте начинающего страхового агента, жаждущего получить
новых клиентов. Он беспорядочно посещает все дома в округе,
предлагая свои услуги. Но для каждого из «типов» домов, которые он
посещает, у него имеется особое предложение.
Придя в дом к обычной семье, он предлагает оформить
медицинскую страховку.
Придя в банк, он предлагает страховку от грабежа.
Придя на фабрику, он предлагает страховку предприятия от
пожара и наводнения.