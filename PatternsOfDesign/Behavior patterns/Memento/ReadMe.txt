Снимок - Memento.

Cнимок - это поведенческий паттерн проектирования, который позволяет хранить предыдущее состояние объекта, не раскрывая подробности их реализации.
Затем снимки можно использоваться для восстановления прошлого состояния.

Классическая реализация на вложенных классах
1. Создатель делает снимки своего состояния по запросу, а также
воспроизводит прошлое состояние, если подать в него готовый
снимок.
2. Снимок — это простой объект данных, содержащий состояние
создателя. Надёжней всего сделать объекты снимков неизменяемыми и передавать в них состояние только через
конструктор.
3. Опекун должен знать, когда делать снимок создателя и когда его
нужно восстанавливать.
Опекун может хранить историю прошлых состояний создателя в
виде стека из снимков. Если понадобится сделать отмену, он
возьмёт последний снимок и передаст его создателю для
восстановления.
4. В этой реализации снимок — это внутренний класс по отношению
к классу создателя, поэтому тот имеет полный доступ к его полям и
методам, несмотря на то, что они объявлены приватными. Опекун
же не имеет доступа ни к состоянию, ни к методам снимков и
может всего лишь хранить ссылки на эти объекты.

Снимки с повышенной защитой

Когда нужно полностью исключить доступ к состоянию Создателей и
Снимков.
1. Эта реализация разрешает иметь несколько видов создателей и
снимков. Каждому классу создателей соответствует собственный
класс снимков. Ни создатели, ни снимки не позволяют прочесть их
состояние.
2. Здесь опекун ещё более жёстко ограничен в доступе к состоянию
создателей и снимков. Но с другой стороны, опекун становится
независим от создателей, так как метод восстановления теперь
находится в самих снимках.
3. Снимки теперь связаны с теми создателями, из которых они
сделаны. Они по-прежнему получают состояние через конструктор.
Благодаря близкой связи между классами, снимки знают, как
восстановить состояние своих создателей.


Пример.
В этом примере паттерн Снимок используется совместно с паттерном
Команда и позволяет хранить резервные копии сложного состояния
текстового редактора и, если потребуется, восстанавливать его.
Объекты команд выступают в роли опекунов и запрашивают снимки у
редактора перед тем, как выполнить своё действие. Если потребуется
отмена операции, команда сможет восстановить состояние редактора,
используя сохранённый снимок.
При этом снимок не имеет публичных полей, поэтому никакой объект
не сможет получить доступа его данным. Снимки связаны с
определённым редактором, которых их создал и сам восстанавливает
его состояние. Это позволяет программе иметь одновременно
несколько объектов редакторов, например, разбитых по вкладкам.

Применимость
Когда вам нужно сохранять мгновенный снимок состояния объекта
(или его части), чтобы впоследствии объект можно было восстановить
в том же состоянии.
Паттерн Снимок позволяет делать любое количество снимков объекта
и хранить их независимо от объекта, с которого делают снимок.
Снимки часто используют не только для реализации операции отмены,
но и для транзакций, когда состояние объекта нужно откатить, если
операция не удалась.
Когда прямое получение состояния объекта раскрывает детали его
реализации и нарушает инкапсуляцию.
Паттерн предлагает изготовить снимок самому исходному объекту, так
как ему доступны все поля, даже приватные.

Преимущества и недостатки
Не нарушает инкапсуляции исходного объекта.
Упрощает структуру исходного объекта. Ему не нужно хранить
историю версий своего состояния.
Требует много памяти, если клиенты слишком часто создают снимки.
Может повлечь дополнительные издержки памяти, если объекты,
хранящие историю, не освобождают ресурсы, занятые устаревшими
снимками.
В некоторых языках (например, PHP, Python, JavaScript) сложно
гарантировать, чтобы только исходный объект имел доступ к
состоянию снимка.
